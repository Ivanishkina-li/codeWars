//буфер и потоки
//в node js есть 4 типа потока - читающий,пишущий,дуплексный(и чтение и запись), преобразующий(+ позволяет изменять читаемые или записываемые данные)
//буфер - временное хранилище предназначенное для хранения куска данных
//надо за миним кол времени передать макс возможную порцию данных. например хотим передат  большой текст и лучше его передат по частям

const fs = require("fs");
const zlib = require("zlib");

//создаем читающий и записыв поток
const readStream = fs.createReadStream("./files/test2.txt"); //в метод передаем путь до файла
const writeStream = fs.createWriteStream("./files/new-text.txt");

//создаем сжимающий поток(как пример наиболее часто встр в преобр потоке)
const compressStream = zlib.createGzip();
//взаимодействие с потоком с помощ метода on. принимает 2 аргум - событие и кол бек. chunk - порция данных
readStream.on("data", (chunk) => {
  //console.log(chunk.toString()); // текст передается небол частями, порциями

  //добавл пишуший поток внутрь читающего. каждый прочитан поток записываем в новый файл
  writeStream.write(chunk);
});

// как рез-тат - появился новый файл-копия new-text

//альтернативой двум методам является метод Pipe который делает одновременно и чтение и запись
readStream.pipe(compressStream).pipe(writeStream);
//прочитан данные сжимаются в файл и затем записываются
